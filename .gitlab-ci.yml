#job:
  # use special keywords
#  when: manual
#  script:
#    - echo " Executa somente manual."

#job:
#  script:
#    - echo "Um exemplo de sessao de script."
#  after_script:
#    - echo "Execute este comando depois de um conjunto completo de `script`."

#job:
#  script:
#    - echo "Um exemplo de executar pipeline quando muda um arquivo."
#  only:
#    changes:
#      - teste.txt
#      - docker/scripts/*
#        - "*.md"
#      - more_scripts/*.{rb,py,sh}

#job:
#  script:
#    - echo "Mostrando variaveis do GitLab"
#    - export

#job:
#  script: echo "Pipeline executa quando for na branch main e com usu√°rio claudiosilva"
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "main" && $GITLAB_USER_LOGIN == "claudiosilva"'
#      when: manual
#    - if: '$CI_COMMIT_BRANCH == "feature"'
#      when: never
#      allow_failure: true

#job:
#  only:
#    - tags
#  script:
#    - echo " Este Job executa somente com tag."
#  when: manual

job:
  only:
    - tags
  script:
    - echo " Este Job executa com gatilho de tag."

#end-to-end:
#  script: echo "Executa exceto mensagem de commit skip-tests"
#  except:
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip-tests/

#Executar com cronometro:
#  stage: deploy
#  script: echo 'Execucao em 1 minuto...'
#  when: delayed
#  start_in: 1 minutes #5 seconds, 30 minutes, 1 day, 1 week

#job:
#  parallel: 3
#  script:
#    - echo "3 trabalhos trabalho paralelo"

job:
  only:
    variables:
      - $GATILHO == "valor"
  script:
    - echo "Executando job por uma variavel == valor"
#curl -X POST \
#     --fail \
#     -F token=c450ddc1e103178a5f6c1d0cd9d6e9 \
#     -F "ref=main" \
#     -F "variables[GATILHO]=valor" \
#     https://gitlab.com/api/v4/projects/34316608/trigger/pipeline


#Fontes
# - https://docs.gitlab.com/ee/ci/jobs/job_control.html
# Runner Docker - https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#register-a-runner-that-uses-the-docker-executor
